package com.springboot.app.backend.turismo.service;

import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.springboot.app.backend.turismo.model.Destino;
import com.springboot.app.backend.turismo.model.DestinoTraduccion;
import com.springboot.app.backend.turismo.model.Preferencia;
import com.springboot.app.backend.turismo.repository.PuntoDeInteresRepository;
import com.springboot.app.backend.turismo.repository.DestinoTraduccionRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class DestinoImpl implements IDestinoService {
	
	private final PuntoDeInteresRepository destinoRepository;
	private final DestinoTraduccionRepository destinoTraduccionRepository;

	@Override
    @Transactional(readOnly = true)
	public List<Destino> obtenerDestinosSegunPreferencias(Preferencia preferencia, Destino.ClimaIdeal climaActual) {
	    return destinoRepository.filtrarDestinos(
	        preferencia.getTiposDeActividades(),
	        preferencia.getCosteMaximo(), // Puedes definir un coste m√°ximo o tomarlo de las preferencias
	        preferencia.isAccesibilidadRequerida(),
	        climaActual == Destino.ClimaIdeal.LLUVIOSO,  // Si llueve, buscar destinos techados
	        climaActual
	    );
	}
	
	@Override
    @Transactional(readOnly = true)
	public DestinoTraduccion obtenerTraduccionDestino(Integer idDestino, String idioma) {
	    return destinoTraduccionRepository.findByDestino_IdAndIdioma(idDestino, idioma);
	}
}
