package com.springboot.app.backend.turismo.auth.service;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.springboot.app.backend.turismo.auth.controller.LoginRequest;
import com.springboot.app.backend.turismo.auth.controller.RegisterRequest;
import com.springboot.app.backend.turismo.auth.controller.TokenResponse;
import com.springboot.app.backend.turismo.auth.repository.Token;
import com.springboot.app.backend.turismo.auth.repository.TokenRepository;
import com.springboot.app.backend.turismo.usuario.User;
import com.springboot.app.backend.turismo.usuario.UserRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AuthService {
	private final UserRepository userRepository;
	private final TokenRepository tokenRepository;
	private final PasswordEncoder passwordEncoder;
	
	public TokenResponse register(RegisterRequest request) {
		var user = User.builder()
				.name(request.name())
				.email(request.email())
				.password(passwordEncoder.encode(request.password()))
				.build();
		var savedUser = userRepository.save(user);
		return null;
		
	}
	
	public TokenResponse login(LoginRequest request) {
		return null;	
	}
	
	private void saveUserToken(User user, String jwtToken) {
		var token = Token.builder()
				.user(user)
				.token(jwtToken)
				.tokenType(Token.TokenType.BEARER)
				.expired(false)
				.revoked(false)
				.build();
	}
}
